plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
    // id "com.github.johnrengelman.shadow" version "8.1.1"

}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
    maven { url "https://maven.terraformersmc.com/" }
    mavenCentral()

    maven {
        name = "meteor-maven"
        url = "https://maven.meteordev.org/releases"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${stonecutter.current.project}"
    mappings "net.fabricmc:yarn:${property('yarn_mappings')}:v2"
    modImplementation "net.fabricmc:fabric-loader:${property('loader_version')}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('fabric_version')}"

    include (
            modImplementation "${property('yacl_pkg')}:${property('yacl')}"
    )

    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0")))

    modImplementation ("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude module: "fabric-api"
    }

    implementation "meteordevelopment:discord-ipc:${project.discordipc_version}"
    include "meteordevelopment:discord-ipc:${project.discordipc_version}"

}

processResources {
    inputs.property "version", project.version
//    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "minecraft_version", stonecutter.current.version
    inputs.property "loader_version", project.loader_version
    inputs.property "minecraft", stonecutter.current.version
    filteringCharset "UTF-8"


    filesMatching("fabric.mod.json") {
        expand "minecraft": stonecutter.current.version,
                "minecraft_version": stonecutter.current.version,
//                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version,
                "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = "${project.archives_base_name}-${stonecutter.current.version}"
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

loom {
    runConfigs.all {
        ideConfigGenerated true // Run configurations are not created for subprojects by default
        runDir "../../run" // Use a shared run folder and create separate worlds
    }
}